{"ast":null,"code":"var _jsxFileName = \"/Users/mateusdavila/Desktop/code/intercambio/front/src/components/toDoList/ToDoListPage.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'; // fake data generator\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getItems = function (count) {\n  let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return Array.from({\n    length: count\n  }, (v, k) => k).map(k => ({\n    id: `item-${k + offset}`,\n    content: `Item: ${k + offset}, Random value: ${Math.round(Math.random() * 100)}`,\n    color: Math.random() > 0.66 ? 'pink' : Math.random() > 0.5 ? 'lightgreen' : 'beige'\n  }));\n}; // a little function to help us with reordering the result\n\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n/**\n * Moves an item from one list to another list.\n */\n\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n  destClone.splice(droppableDestination.index, 0, removed);\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\n\nconst grid = 4;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: 'none',\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n  // change background colour if dragging\n  background: isDragging ? 'lightgreen' : 'lightgrey',\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? 'lightblue' : '#eee',\n  padding: grid,\n  margin: '3px',\n  width: 250\n});\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      list1: getItems(5, 1),\n      list2: getItems(4, 6),\n      list3: getItems(6, 10)\n    };\n    this.droppableIds = {\n      droppable1: 'list1',\n      droppable2: 'list2',\n      droppable3: 'list3'\n    };\n\n    this.getList = id => this.state[this.droppableIds[id]];\n\n    this.onDragEnd = result => {\n      const {\n        source,\n        destination\n      } = result; // dropped outside the list\n\n      if (!destination) {\n        return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n        const items = reorder(this.getList(source.droppableId), source.index, destination.index);\n        let copiedState = Object.assign({}, this.state);\n\n        if (source.droppableId === 'droppable1') {\n          copiedState.list1 = items;\n        } else if (source.droppableId === 'droppable2') {\n          copiedState.list2 = items;\n        } else if (source.droppableId === 'droppable3') {\n          copiedState.list3 = items;\n        }\n\n        this.setState(copiedState);\n      } else {\n        const result = move(this.getList(source.droppableId), this.getList(destination.droppableId), source, destination);\n        console.warn('result', result);\n        this.setState({\n          list1: result.droppable1 ? result.droppable1 : this.state.list1,\n          list2: result.droppable2 ? result.droppable2 : this.state.list2,\n          list3: result.droppable3 ? result.droppable3 : this.state.list3\n        });\n      }\n    };\n  }\n\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    const lists = [{\n      droppableId: 'droppable1',\n      listId: 'list1',\n      title: 'List A'\n    }, {\n      droppableId: 'droppable2',\n      listId: 'list2',\n      title: 'List B'\n    }, {\n      droppableId: 'droppable3',\n      listId: 'list3',\n      title: 'List C'\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        children: lists.map((list, listIndex) => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: list.droppableId,\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            style: getListStyle(snapshot.isDraggingOver),\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: list.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this), this.state[list.listId] && this.state[list.listId].map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.id,\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    background: item.color\n                  },\n                  children: item.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 25\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 21\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this)\n        }, 'list-droppable-' + listIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }\n\n} // Put the things into the DOM!\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 187,\n  columnNumber: 17\n}, this), document.getElementById('root'));","map":{"version":3,"names":["React","Component","ReactDOM","DragDropContext","Droppable","Draggable","getItems","count","offset","Array","from","length","v","k","map","id","content","Math","round","random","color","reorder","list","startIndex","endIndex","result","removed","splice","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","grid","getItemStyle","isDragging","draggableStyle","userSelect","padding","margin","background","getListStyle","isDraggingOver","width","App","state","list1","list2","list3","droppableIds","droppable1","droppable2","droppable3","getList","onDragEnd","items","copiedState","Object","assign","setState","console","warn","render","lists","listId","title","display","listIndex","provided","snapshot","innerRef","item","draggableProps","dragHandleProps","style","placeholder","document","getElementById"],"sources":["/Users/mateusdavila/Desktop/code/intercambio/front/src/components/toDoList/ToDoListPage.js"],"sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\n// fake data generator\nconst getItems = (count, offset = 0) =>\n  Array.from({ length: count }, (v, k) => k).map(k => ({\n    id: `item-${k + offset}`,\n    content: `Item: ${k + offset}, Random value: ${Math.round(Math.random() * 100)}`,\n    color: Math.random () > 0.66 ? 'pink': Math.random() > 0.5 ? 'lightgreen' : 'beige'\n  }))\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list)\n  const [removed] = result.splice(startIndex, 1)\n  result.splice(endIndex, 0, removed)\n  return result\n}\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source)\n  const destClone = Array.from(destination)\n  const [removed] = sourceClone.splice(droppableSource.index, 1)\n\n  destClone.splice(droppableDestination.index, 0, removed)\n\n  const result = {}\n  result[droppableSource.droppableId] = sourceClone\n  result[droppableDestination.droppableId] = destClone\n\n  return result\n}\n\nconst grid = 4\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: 'none',\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n\n  // change background colour if dragging\n  background: isDragging ? 'lightgreen' : 'lightgrey',\n\n  // styles we need to apply on draggables\n  ...draggableStyle\n})\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? 'lightblue' : '#eee',\n  padding: grid,\n  margin: '3px',\n  width: 250\n})\n\nclass App extends Component {\n  state = {\n    list1: getItems(5,1),\n    list2: getItems(4, 6),\n    list3: getItems(6, 10)\n  }\n\n  /**\n   * A semi-generic way to handle multiple lists. Matches\n   * the IDs of the droppable container to the names of the\n   * source arrays stored in the state.\n   */\n  droppableIds = {\n    droppable1: 'list1',\n    droppable2: 'list2',\n    droppable3: 'list3'\n  }\n\n  getList = id => this.state[this.droppableIds[id]]\n\n  onDragEnd = result => {\n    const { source, destination } = result\n\n    // dropped outside the list\n    if (!destination) { return }\n\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder(\n        this.getList(source.droppableId),\n        source.index,\n        destination.index\n      )\n\n      let copiedState = Object.assign({}, this.state)\n\n      if (source.droppableId === 'droppable1') {\n        copiedState.list1 = items\n      } else if (source.droppableId === 'droppable2') {\n        copiedState.list2 = items\n      } else if (source.droppableId === 'droppable3') {\n        copiedState.list3 = items\n      }\n\n      this.setState(copiedState)\n    } else {\n      const result = move(\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination\n      )\n\n      console.warn('result', result)\n      this.setState({\n        list1: result.droppable1 ? result.droppable1 : this.state.list1,\n        list2: result.droppable2 ? result.droppable2 : this.state.list2,\n        list3: result.droppable3 ? result.droppable3 : this.state.list3\n      })\n    }\n  }\n\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    const lists = [\n      {\n        droppableId: 'droppable1',\n        listId: 'list1',\n        title: 'List A'\n      },\n      {\n        droppableId: 'droppable2',\n        listId: 'list2',\n        title: 'List B'\n      },\n      {\n        droppableId: 'droppable3',\n        listId: 'list3',\n        title: 'List C'\n      },\n    ]\n    return (\n      <div style={{ display: 'flex' }}>\n        <DragDropContext onDragEnd={this.onDragEnd}>\n\n          {lists.map((list, listIndex) =>\n            <Droppable key={'list-droppable-' + listIndex} droppableId={list.droppableId}>\n              {(provided, snapshot) => (\n                <div\n                  ref={provided.innerRef}\n                  style={getListStyle(snapshot.isDraggingOver)}>\n                  <h4>\n                    {list.title}\n                  </h4>\n                  {this.state[list.listId] && this.state[list.listId].map((item, index) => (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}>\n                      {(provided, snapshot) => (\n                        <div\n                          ref={provided.innerRef}\n                          { ...provided.draggableProps }\n                          { ...provided.dragHandleProps }\n                          style={getItemStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style\n                          )}>\n                          <div style={{ background: item.color }}>\n                            {item.content}\n                          </div>\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          )}\n        </DragDropContext>\n      </div>\n    )\n  }\n}\n\n// Put the things into the DOM!\nReactDOM.render(<App />, document.getElementById('root'));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}