{"ast":null,"code":"var _jsxFileName = \"/Users/mateusdavila/Desktop/code/intercambio/front/src/pages/toDoList/ToDoList.js\",\n    _s = $RefreshSig$();\n\nimport useState from 'react';\nimport './toDolist.css';\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport uuid from \"uuid/v4\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDoList = () => {\n  _s();\n\n  const itemsFromBackend = [{\n    id: uuid(),\n    content: \"First task\"\n  }, {\n    id: uuid(),\n    content: \"Second task\"\n  }, {\n    id: uuid(),\n    content: \"Third task\"\n  }, {\n    id: uuid(),\n    content: \"Fourth task\"\n  }, {\n    id: uuid(),\n    content: \"Fifth task\"\n  }];\n  const columnsFromBackend = {\n    [uuid()]: {\n      name: \"Requested\",\n      items: itemsFromBackend\n    },\n    [uuid()]: {\n      name: \"To do\",\n      items: []\n    },\n    [uuid()]: {\n      name: \"In Progress\",\n      items: []\n    },\n    [uuid()]: {\n      name: \"Done\",\n      items: []\n    }\n  };\n\n  const onDragEnd = (result, columns, setColumns) => {\n    if (!result.destination) return;\n    const {\n      source,\n      destination\n    } = result;\n\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n      const [removed] = sourceItems.splice(source.index, 1);\n      destItems.splice(destination.index, 0, removed);\n      setColumns({ ...columns,\n        [source.droppableId]: { ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: { ...destColumn,\n          items: destItems\n        }\n      });\n    } else {\n      const column = columns[source.droppableId];\n      const copiedItems = [...column.items];\n      const [removed] = copiedItems.splice(source.index, 1);\n      copiedItems.splice(destination.index, 0, removed);\n      setColumns({ ...columns,\n        [source.droppableId]: { ...column,\n          items: copiedItems\n        }\n      });\n    }\n  };\n\n  const [columns, setColumns] = useState(columnsFromBackend);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: result => onDragEnd(result, columns, setColumns),\n      children: Object.entries(columns).map((_ref, index) => {\n        let [columnId, column] = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: column.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: columnId,\n              children: (provided, snapshot) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n                  ref: provided.innerRef,\n                  style: {\n                    background: snapshot.isDraggingOver ? \"lightblue\" : \"lightgrey\",\n                    padding: 4,\n                    width: 250,\n                    minHeight: 500\n                  },\n                  children: [column.items.map((item, index) => {\n                    return /*#__PURE__*/_jsxDEV(Draggable, {\n                      draggableId: item.id,\n                      index: index,\n                      children: (provided, snapshot) => {\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          ref: provided.innerRef,\n                          ...provided.draggableProps,\n                          ...provided.dragHandleProps,\n                          style: {\n                            userSelect: \"none\",\n                            padding: 16,\n                            margin: \"0 0 8px 0\",\n                            minHeight: \"50px\",\n                            backgroundColor: snapshot.isDragging ? \"#263B4A\" : \"#456C86\",\n                            color: \"white\",\n                            ...provided.draggableProps.style\n                          },\n                          children: item.content\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 114,\n                          columnNumber: 37\n                        }, this);\n                      }\n                    }, item.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 31\n                    }, this);\n                  }), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 25\n                }, this);\n              }\n            }, columnId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, columnId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ToDoList, \"bYCmdCIiWWb+ZDQE6HV7NzBHfWY=\");\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["useState","DragDropContext","Draggable","Droppable","uuid","ToDoList","itemsFromBackend","id","content","columnsFromBackend","name","items","onDragEnd","result","columns","setColumns","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","removed","splice","index","column","copiedItems","display","justifyContent","height","Object","entries","map","columnId","flexDirection","alignItems","margin","provided","snapshot","droppableProps","innerRef","background","isDraggingOver","padding","width","minHeight","item","draggableProps","dragHandleProps","userSelect","backgroundColor","isDragging","color","style","placeholder"],"sources":["/Users/mateusdavila/Desktop/code/intercambio/front/src/pages/toDoList/ToDoList.js"],"sourcesContent":["import useState from 'react'\nimport './toDolist.css'\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport uuid from \"uuid/v4\";\n\n\nconst ToDoList = () => {\n  const itemsFromBackend = [\n    { id: uuid(), content: \"First task\" },\n    { id: uuid(), content: \"Second task\" },\n    { id: uuid(), content: \"Third task\" },\n    { id: uuid(), content: \"Fourth task\" },\n    { id: uuid(), content: \"Fifth task\" }\n  ];\n  \n  const columnsFromBackend = {\n    [uuid()]: {\n      name: \"Requested\",\n      items: itemsFromBackend\n    },\n    [uuid()]: {\n      name: \"To do\",\n      items: []\n    },\n    [uuid()]: {\n      name: \"In Progress\",\n      items: []\n    },\n    [uuid()]: {\n      name: \"Done\",\n      items: []\n    }\n  };\n  \n  const onDragEnd = (result, columns, setColumns) => {\n    if (!result.destination) return;\n    const { source, destination } = result;\n  \n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n      const [removed] = sourceItems.splice(source.index, 1);\n      destItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems\n        }\n      });\n    } else {\n      const column = columns[source.droppableId];\n      const copiedItems = [...column.items];\n      const [removed] = copiedItems.splice(source.index, 1);\n      copiedItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...column,\n          items: copiedItems\n        }\n      });\n    }\n  };\n  \n    const [columns, setColumns] = useState(columnsFromBackend);\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"center\", height: \"100%\" }}>\n        <DragDropContext\n          onDragEnd={result => onDragEnd(result, columns, setColumns)}\n        >\n          {Object.entries(columns).map(([columnId, column], index) => {\n            return (\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\"\n                }}\n                key={columnId}\n              >\n                <h2>{column.name}</h2>\n                <div style={{ margin: 8 }}>\n                  <Droppable droppableId={columnId} key={columnId}>\n                    {(provided, snapshot) => {\n                      return (\n                        <div\n                          {...provided.droppableProps}\n                          ref={provided.innerRef}\n                          style={{\n                            background: snapshot.isDraggingOver\n                              ? \"lightblue\"\n                              : \"lightgrey\",\n                            padding: 4,\n                            width: 250,\n                            minHeight: 500\n                          }}\n                        >\n                          {column.items.map((item, index) => {\n                            return (\n                              <Draggable\n                                key={item.id}\n                                draggableId={item.id}\n                                index={index}\n                              >\n                                {(provided, snapshot) => {\n                                  return (\n                                    <div\n                                      ref={provided.innerRef}\n                                      {...provided.draggableProps}\n                                      {...provided.dragHandleProps}\n                                      style={{\n                                        userSelect: \"none\",\n                                        padding: 16,\n                                        margin: \"0 0 8px 0\",\n                                        minHeight: \"50px\",\n                                        backgroundColor: snapshot.isDragging\n                                          ? \"#263B4A\"\n                                          : \"#456C86\",\n                                        color: \"white\",\n                                        ...provided.draggableProps.style\n                                      }}\n                                    >\n                                      {item.content}\n                                    </div>\n                                  );\n                                }}\n                              </Draggable>\n                            );\n                          })}\n                          {provided.placeholder}\n                        </div>\n                      );\n                    }}\n                  </Droppable>\n                </div>\n              </div>\n            );\n          })}\n        </DragDropContext>\n      </div>\n    );\n}\n\nexport default ToDoList"],"mappings":"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"},"metadata":{},"sourceType":"module"}