{"ast":null,"code":"var _jsxFileName = \"/Users/mateusdavila/Desktop/code/intercambio/front/src/components/toDoList/ToDoListPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, memo } from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  tasks: {\n    task1: {\n      id: \"task1\",\n      content: \"Take out the bins\"\n    },\n    task2: {\n      id: \"task2\",\n      content: \"Watch TV\"\n    },\n    task3: {\n      id: \"task3\",\n      content: \"Charge phone\"\n    },\n    task4: {\n      id: \"task4\",\n      content: \"Cook dinner\"\n    }\n  },\n  columns: {\n    col1: {\n      id: \"col1\",\n      title: \"Aberto\",\n      taskIds: [\"task1\", \"task2\", \"task3\", \"task4\"]\n    },\n    col2: {\n      id: \"col2\",\n      title: \"Em Progresso\",\n      taskIds: []\n    },\n    col3: {\n      id: \"col3\",\n      title: \"Finalizado\",\n      taskIds: []\n    }\n  },\n  columnOrder: [\"col1\", \"col2\", \"col3\"]\n};\nconst TaskContainer = styled.div`\n  border: 1px solid lightgrey;\n  padding: 8px;\n  border-radius: 2px;\n  margin-bottom: 8px;\n  background-color: ${props => props.isDragging ? \"red\" : \"white\"};\n  transition: background 0.1s;\n`;\n_c = TaskContainer;\nconst Task = /*#__PURE__*/memo(_c2 = _ref => {\n  let {\n    task,\n    index\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: task.id,\n    index: index,\n    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(TaskContainer, { ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      ref: provided.innerRef,\n      isDragging: snapshot.isDragging,\n      children: task.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n});\n_c3 = Task;\nconst Container = styled.div`\n  margin: 8px;\n  border: 1px solid lightgrey;\n  border-radius: 2px;\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  background-color: ${props => props.isDragging ? \"lightgreen\" : \"white\"};\n`;\n_c4 = Container;\nconst Title = styled.h3`\n  padding: 8px;\n`;\n_c5 = Title;\nconst List = styled.div`\n  padding: 8px;\n  transition: background 0.1s;\n  background-color: ${props => props.isDraggingOver ? \"lightgrey\" : \"inherit \"};\n  flex-grow: 1;\n`;\n_c6 = List;\nconst Columns = styled.div`\n  display: flex;\n`;\n_c7 = Columns;\nconst Column = /*#__PURE__*/memo(_c8 = _ref2 => {\n  let {\n    column,\n    tasks,\n    index\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: column.id,\n    index: index,\n    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Container, { ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      isDragging: snapshot.isDragging,\n      ref: provided.innerRef,\n      children: [/*#__PURE__*/_jsxDEV(Title, { ...provided.dragHandleProps,\n        children: column.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: column.id,\n        type: \"task\",\n        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(List, {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          isDraggingOver: snapshot.isDraggingOver,\n          children: [tasks.map((t, i) => /*#__PURE__*/_jsxDEV(Task, {\n            task: t,\n            index: i\n          }, t.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 3\n  }, this);\n});\n_c9 = Column;\n\nfunction ToDoListPage() {\n  _s();\n\n  const [state, setState] = useState(data);\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: _ref3 => {\n      let {\n        destination,\n        source,\n        draggableId,\n        type\n      } = _ref3;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      if (type === \"column\") {\n        const newColOrd = Array.from(state.columnOrder);\n        newColOrd.splice(source.index, 1);\n        newColOrd.splice(destination.index, 0, draggableId);\n        const newState = { ...state,\n          columnOrder: newColOrd\n        };\n        setState(newState);\n      }\n\n      const startcol = state.columns[source.droppableId];\n      const endcol = state.columns[destination.droppableId];\n\n      if (startcol === endcol) {\n        const tasks = Array.from(startcol.taskIds);\n        tasks.splice(source.index, 1);\n        tasks.splice(destination.index, 0, draggableId);\n        const newCol = { ...startcol,\n          taskIds: tasks\n        };\n        const newState = { ...state,\n          columns: { ...state.columns,\n            [newCol.id]: newCol\n          }\n        };\n        setState(newState);\n        return;\n      }\n\n      const startTaskIds = Array.from(startcol.taskIds);\n      startTaskIds.splice(source.index, 1);\n      const newStart = { ...startcol,\n        taskIds: startTaskIds\n      };\n      const endTaskIds = Array.from(endcol.taskIds);\n      endTaskIds.splice(destination.index, 0, draggableId);\n      const newEnd = { ...endcol,\n        taskIds: endTaskIds\n      };\n      const newState = { ...state,\n        columns: { ...state.columns,\n          [newStart.id]: newStart,\n          [newEnd.id]: newEnd\n        }\n      };\n      setState(newState);\n    },\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"columns\",\n      direction: \"horizontal\",\n      type: \"column\",\n      children: provided => /*#__PURE__*/_jsxDEV(Columns, { ...provided.droppableProps,\n        ref: provided.innerRef,\n        children: [state.columnOrder.map((id, i) => {\n          const col = state.columns[id];\n          const tasks = col.taskIds.map(taskid => state.tasks[taskid]);\n          return /*#__PURE__*/_jsxDEV(Column, {\n            column: col,\n            tasks: tasks,\n            index: i\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 22\n          }, this);\n        }), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDoListPage, \"BesDbRegePIGgoZFDSl1jbsE5cA=\");\n\n_c10 = ToDoListPage;\nexport default ToDoListPage;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"TaskContainer\");\n$RefreshReg$(_c2, \"Task$memo\");\n$RefreshReg$(_c3, \"Task\");\n$RefreshReg$(_c4, \"Container\");\n$RefreshReg$(_c5, \"Title\");\n$RefreshReg$(_c6, \"List\");\n$RefreshReg$(_c7, \"Columns\");\n$RefreshReg$(_c8, \"Column$memo\");\n$RefreshReg$(_c9, \"Column\");\n$RefreshReg$(_c10, \"ToDoListPage\");","map":{"version":3,"names":["useState","useEffect","memo","ReactDOM","styled","DragDropContext","Droppable","Draggable","data","tasks","task1","id","content","task2","task3","task4","columns","col1","title","taskIds","col2","col3","columnOrder","TaskContainer","div","props","isDragging","Task","task","index","provided","snapshot","draggableProps","dragHandleProps","innerRef","Container","Title","h3","List","isDraggingOver","Columns","Column","column","droppableProps","map","t","i","placeholder","ToDoListPage","state","setState","destination","source","draggableId","type","droppableId","newColOrd","Array","from","splice","newState","startcol","endcol","newCol","startTaskIds","newStart","endTaskIds","newEnd","col","taskid"],"sources":["/Users/mateusdavila/Desktop/code/intercambio/front/src/components/toDoList/ToDoListPage.js"],"sourcesContent":["import {useState, useEffect , memo} from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\n\n\n\n\nconst data = {\n  tasks: {\n    task1: {\n      id: \"task1\",\n      content: \"Take out the bins\"\n    },\n    task2: {\n      id: \"task2\",\n      content: \"Watch TV\"\n    },\n    task3: {\n      id: \"task3\",\n      content: \"Charge phone\"\n    },\n    task4: {\n      id: \"task4\",\n      content: \"Cook dinner\"\n    }\n  },\n  columns: {\n    col1: {\n      id: \"col1\",\n      title: \"Aberto\",\n      taskIds: [\"task1\", \"task2\", \"task3\", \"task4\"]\n    },\n    col2: {\n      id: \"col2\",\n      title: \"Em Progresso\",\n      taskIds: []\n    },\n    col3: {\n      id: \"col3\",\n      title: \"Finalizado\",\n      taskIds: []\n    }\n  },\n  columnOrder: [\"col1\", \"col2\", \"col3\"]\n};\n\nconst TaskContainer = styled.div`\n  border: 1px solid lightgrey;\n  padding: 8px;\n  border-radius: 2px;\n  margin-bottom: 8px;\n  background-color: ${props => (props.isDragging ? \"red\" : \"white\")};\n  transition: background 0.1s;\n`;\n\n\n\n\nconst Task = memo(({ task, index }) => {\n  return (\n    <Draggable draggableId={task.id} index={index}>\n      {(provided, snapshot) => (\n        <TaskContainer\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          isDragging={snapshot.isDragging}\n        >\n          {task.content}\n        </TaskContainer>\n      )}\n    </Draggable>\n  );\n});\n\nconst Container = styled.div`\n  margin: 8px;\n  border: 1px solid lightgrey;\n  border-radius: 2px;\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  background-color: ${props => (props.isDragging ? \"lightgreen\" : \"white\")};\n`;\nconst Title = styled.h3`\n  padding: 8px;\n`;\nconst List = styled.div`\n  padding: 8px;\n  transition: background 0.1s;\n  background-color: ${props =>\n    props.isDraggingOver ? \"lightgrey\" : \"inherit \"};\n  flex-grow: 1;\n`;\n\nconst Columns = styled.div`\n  display: flex;\n`;\n\n\n\nconst Column = memo(({ column, tasks, index }) => (\n  <Draggable draggableId={column.id} index={index}>\n    {(provided, snapshot) => (\n      <Container\n        {...provided.draggableProps}\n        {...provided.dragHandleProps}\n        isDragging={snapshot.isDragging}\n        ref={provided.innerRef}\n      >\n        <Title {...provided.dragHandleProps}>{column.title}</Title>\n        <Droppable droppableId={column.id} type=\"task\">\n          {(provided, snapshot) => (\n            <List\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              isDraggingOver={snapshot.isDraggingOver}\n            >\n              {tasks.map((t, i) => (\n                <Task key={t.id} task={t} index={i} />\n              ))}\n              {provided.placeholder}\n            </List>\n          )}\n        </Droppable>\n      </Container>\n    )}\n  </Draggable>\n));\n\nfunction ToDoListPage() {\n  const [state, setState] = useState(data);\n  return (\n    <DragDropContext\n      onDragEnd={({ destination, source, draggableId, type }) => {\n        if (!destination) {\n          return;\n        }\n        if (\n          destination.droppableId === source.droppableId &&\n          destination.index === source.index\n        ) {\n          return;\n        }\n\n        if (type === \"column\") {\n          const newColOrd = Array.from(state.columnOrder);\n          newColOrd.splice(source.index, 1);\n          newColOrd.splice(destination.index, 0, draggableId);\n\n          const newState = {\n            ...state,\n            columnOrder: newColOrd\n          };\n          setState(newState);\n        }\n\n        const startcol = state.columns[source.droppableId];\n        const endcol = state.columns[destination.droppableId];\n\n        if (startcol === endcol) {\n          const tasks = Array.from(startcol.taskIds);\n          tasks.splice(source.index, 1);\n          tasks.splice(destination.index, 0, draggableId);\n\n          const newCol = {\n            ...startcol,\n            taskIds: tasks\n          };\n\n          const newState = {\n            ...state,\n            columns: {\n              ...state.columns,\n              [newCol.id]: newCol\n            }\n          };\n\n          setState(newState);\n          return;\n        }\n        const startTaskIds = Array.from(startcol.taskIds);\n        startTaskIds.splice(source.index, 1);\n        const newStart = {\n          ...startcol,\n          taskIds: startTaskIds\n        };\n        const endTaskIds = Array.from(endcol.taskIds);\n        endTaskIds.splice(destination.index, 0, draggableId);\n        const newEnd = {\n          ...endcol,\n          taskIds: endTaskIds\n        };\n        const newState = {\n          ...state,\n          columns: {\n            ...state.columns,\n            [newStart.id]: newStart,\n            [newEnd.id]: newEnd\n          }\n        };\n        setState(newState);\n      }}\n    >\n      <Droppable droppableId=\"columns\" direction=\"horizontal\" type=\"column\">\n        {provided => (\n          <Columns {...provided.droppableProps} ref={provided.innerRef}>\n            {state.columnOrder.map((id, i) => {\n              const col = state.columns[id];\n              const tasks = col.taskIds.map(taskid => state.tasks[taskid]);\n              return <Column key={id} column={col} tasks={tasks} index={i} />;\n            })}\n            {provided.placeholder}\n          </Columns>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n}\n\nexport default ToDoListPage\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}