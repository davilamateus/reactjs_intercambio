{"ast":null,"code":"var _jsxFileName = \"/Users/mateusdavila/Desktop/code/intercambio/front/src/components/toDoList/Column.js\";\nimport React from \"react\";\nimport DndDroppable from \"./common/DndDroppable\";\nimport { Item } from \"./Item\";\nimport { getDragGroupByColumn, getSelectedMap } from \"./common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Column(_ref) {\n  let {\n    columnId,\n    items = [],\n    selectedIds = [],\n    draggingItemId,\n    multiSelectTo,\n    toggleSelection,\n    toggleSelectionInGroup,\n    type\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(DndDroppable, {\n    droppableId: columnId,\n    type: type,\n    children: (provided, snapshot) => items.map((item, index) => {\n      const isSelected = Boolean(getSelectedMap(selectedIds)[item.id]);\n      const dragGroup = getDragGroupByColumn(provided.droppableProps[\"data-rbd-droppable-id\"]);\n      const isGhosting = isSelected && Boolean(draggingItemId) && draggingItemId !== item.id && (dragGroup === null || dragGroup === void 0 ? void 0 : dragGroup.name) === type;\n      return /*#__PURE__*/_jsxDEV(Item, {\n        item: item,\n        index: index,\n        isSelected: isSelected,\n        isGhosting: isGhosting,\n        selectionCount: selectedIds.length,\n        toggleSelection: toggleSelection,\n        toggleSelectionInGroup: toggleSelectionInGroup,\n        multiSelectTo: multiSelectTo\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = Column;\n\nvar _c;\n\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"names":["React","DndDroppable","Item","getDragGroupByColumn","getSelectedMap","Column","columnId","items","selectedIds","draggingItemId","multiSelectTo","toggleSelection","toggleSelectionInGroup","type","provided","snapshot","map","item","index","isSelected","Boolean","id","dragGroup","droppableProps","isGhosting","name","length"],"sources":["/Users/mateusdavila/Desktop/code/intercambio/front/src/components/toDoList/Column.js"],"sourcesContent":["import React from \"react\";\n\nimport DndDroppable from \"./common/DndDroppable\";\nimport { Item } from \"./Item\";\nimport { getDragGroupByColumn, getSelectedMap } from \"./common\";\n\nexport default function Column({\n  columnId,\n  items = [],\n  selectedIds = [],\n  draggingItemId,\n  multiSelectTo,\n  toggleSelection,\n  toggleSelectionInGroup,\n  type\n}) {\n  return (\n    <DndDroppable droppableId={columnId} type={type}>\n      {(provided, snapshot) =>\n        items.map((item, index) => {\n          const isSelected = Boolean(getSelectedMap(selectedIds)[item.id]);\n          const dragGroup = getDragGroupByColumn(\n            provided.droppableProps[\"data-rbd-droppable-id\"]\n          );\n          const isGhosting =\n            isSelected &&\n            Boolean(draggingItemId) &&\n            draggingItemId !== item.id &&\n            dragGroup?.name === type;\n          return (\n            <Item\n              item={item}\n              index={index}\n              key={item.id}\n              isSelected={isSelected}\n              isGhosting={isGhosting}\n              selectionCount={selectedIds.length}\n              toggleSelection={toggleSelection}\n              toggleSelectionInGroup={toggleSelectionInGroup}\n              multiSelectTo={multiSelectTo}\n            />\n          );\n        })\n      }\n    </DndDroppable>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,oBAAT,EAA+BC,cAA/B,QAAqD,UAArD;;AAEA,eAAe,SAASC,MAAT,OASZ;EAAA,IAT4B;IAC7BC,QAD6B;IAE7BC,KAAK,GAAG,EAFqB;IAG7BC,WAAW,GAAG,EAHe;IAI7BC,cAJ6B;IAK7BC,aAL6B;IAM7BC,eAN6B;IAO7BC,sBAP6B;IAQ7BC;EAR6B,CAS5B;EACD,oBACE,QAAC,YAAD;IAAc,WAAW,EAAEP,QAA3B;IAAqC,IAAI,EAAEO,IAA3C;IAAA,UACG,CAACC,QAAD,EAAWC,QAAX,KACCR,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;MACzB,MAAMC,UAAU,GAAGC,OAAO,CAAChB,cAAc,CAACI,WAAD,CAAd,CAA4BS,IAAI,CAACI,EAAjC,CAAD,CAA1B;MACA,MAAMC,SAAS,GAAGnB,oBAAoB,CACpCW,QAAQ,CAACS,cAAT,CAAwB,uBAAxB,CADoC,CAAtC;MAGA,MAAMC,UAAU,GACdL,UAAU,IACVC,OAAO,CAACX,cAAD,CADP,IAEAA,cAAc,KAAKQ,IAAI,CAACI,EAFxB,IAGA,CAAAC,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEG,IAAX,MAAoBZ,IAJtB;MAKA,oBACE,QAAC,IAAD;QACE,IAAI,EAAEI,IADR;QAEE,KAAK,EAAEC,KAFT;QAIE,UAAU,EAAEC,UAJd;QAKE,UAAU,EAAEK,UALd;QAME,cAAc,EAAEhB,WAAW,CAACkB,MAN9B;QAOE,eAAe,EAAEf,eAPnB;QAQE,sBAAsB,EAAEC,sBAR1B;QASE,aAAa,EAAEF;MATjB,GAGOO,IAAI,CAACI,EAHZ;QAAA;QAAA;QAAA;MAAA,QADF;IAaD,CAvBD;EAFJ;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD;KAxCuBhB,M"},"metadata":{},"sourceType":"module"}