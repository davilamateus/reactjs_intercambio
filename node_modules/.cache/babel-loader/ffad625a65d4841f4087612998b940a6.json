{"ast":null,"code":"var _jsxFileName = \"/Users/mateusdavila/Desktop/code/intercambio/front/src/components/toDoList/ToDoListPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, memo } from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport Api from \"../../axios/Axios\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToDoListPage() {\n  _s();\n\n  const [list, setList] = useState([]);\n  let token = undefined;\n  const local = localStorage.getItem('token');\n  const session = sessionStorage.getItem('token');\n\n  if (!session) {\n    if (!local) {\n      window.location.href = '/login';\n    } else {\n      token = local;\n      sessionStorage.setItem('token', local);\n    }\n  } else {\n    token = session;\n  }\n\n  useEffect(() => {\n    if (token !== undefined) {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${sessionStorage.getItem('token')}`\n        }\n      };\n\n      async function getArticle() {\n        await Api.get(`/user/todolist`, config).then(data => {\n          setList([data.data]);\n        });\n      }\n\n      getArticle();\n    }\n  }, [token]);\n  console.log(list);\n  useEffect(() => {}, [list]);\n  const data = {\n    tasks: {\n      task1: {\n        id: \"task1\",\n        title: 'aklsdflksad',\n        content: \"Take out the bins\"\n      },\n      task2: {\n        id: \"task2\",\n        title: 'aklsdflksad',\n        content: \"Watch TV\"\n      },\n      task3: {\n        id: \"task3\",\n        title: 'aklsdflksad',\n        content: \"Charge phone\"\n      },\n      task4: {\n        id: \"task4\",\n        title: 'aklsdflksad',\n        content: \"Cook dinner\"\n      }\n    },\n    columns: {\n      col1: {\n        id: \"col1\",\n        title: \"Aberto\",\n        taskIds: [\"task1\", \"task2\", \"task3\", \"task4\"]\n      },\n      col2: {\n        id: \"col2\",\n        title: \"Em Progresso\",\n        taskIds: []\n      },\n      col3: {\n        id: \"col3\",\n        title: \"Finalizado\",\n        taskIds: []\n      }\n    },\n    columnOrder: [\"col1\", \"col2\", \"col3\"]\n  };\n  const TaskContainer = styled.div`\n    border: 1px solid lightgrey;\n    padding: 8px;\n    border-radius: 2px;\n    margin-bottom: 8px;\n    background-color: ${props => props.isDragging ? \"red\" : \"white\"};\n    transition: background 0.1s;\n  `;\n  const Task = /*#__PURE__*/memo(_ref => {\n    let {\n      task,\n      index\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: task.id,\n      index: index,\n      children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(TaskContainer, { ...provided.draggableProps,\n        ...provided.dragHandleProps,\n        ref: provided.innerRef,\n        isDragging: snapshot.isDragging,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: task.title,\n          description: task.description,\n          category: task.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  });\n  const Container = styled.div`\n    margin: 8px;\n    border: 1px solid lightgrey;\n    border-radius: 2px;\n    width: 200px;\n    display: flex;\n    flex-direction: column;\n    background-color: ${props => props.isDragging ? \"lightgreen\" : \"white\"};\n  `;\n  const Title = styled.h3`\n    padding: 8px;\n  `;\n  const List = styled.div`\n    padding: 8px;\n    transition: background 0.1s;\n    background-color: ${props => props.isDraggingOver ? \"lightgrey\" : \"inherit \"};\n    flex-grow: 1;\n  `;\n  const Columns = styled.div`\n    display: flex;\n  `;\n  const Column = /*#__PURE__*/memo(_ref2 => {\n    let {\n      column,\n      tasks,\n      index\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: column.id,\n      index: index,\n      children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Container, { ...provided.draggableProps,\n        ...provided.dragHandleProps,\n        isDragging: snapshot.isDragging,\n        ref: provided.innerRef,\n        children: [/*#__PURE__*/_jsxDEV(Title, { ...provided.dragHandleProps,\n          children: column.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: column.id,\n          type: \"task\",\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(List, {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            isDraggingOver: snapshot.isDraggingOver,\n            children: [tasks.map((t, i) => /*#__PURE__*/_jsxDEV(Task, {\n              task: t,\n              index: i\n            }, t.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }, this);\n  });\n  const [state, setState] = useState(data);\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: _ref3 => {\n      let {\n        destination,\n        source,\n        draggableId,\n        type\n      } = _ref3;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      if (type === \"column\") {\n        const newColOrd = Array.from(state.columnOrder);\n        newColOrd.splice(source.index, 1);\n        newColOrd.splice(destination.index, 0, draggableId);\n        const newState = { ...state,\n          columnOrder: newColOrd\n        };\n        setState(newState);\n      }\n\n      const startcol = state.columns[source.droppableId];\n      const endcol = state.columns[destination.droppableId];\n\n      if (startcol === endcol) {\n        const tasks = Array.from(startcol.taskIds);\n        tasks.splice(source.index, 1);\n        tasks.splice(destination.index, 0, draggableId);\n        const newCol = { ...startcol,\n          taskIds: tasks\n        };\n        const newState = { ...state,\n          columns: { ...state.columns,\n            [newCol.id]: newCol\n          }\n        };\n        setState(newState);\n        return;\n      }\n\n      const startTaskIds = Array.from(startcol.taskIds);\n      startTaskIds.splice(source.index, 1);\n      const newStart = { ...startcol,\n        taskIds: startTaskIds\n      };\n      const endTaskIds = Array.from(endcol.taskIds);\n      endTaskIds.splice(destination.index, 0, draggableId);\n      const newEnd = { ...endcol,\n        taskIds: endTaskIds\n      };\n      const newState = { ...state,\n        columns: { ...state.columns,\n          [newStart.id]: newStart,\n          [newEnd.id]: newEnd\n        }\n      };\n      setState(newState);\n    },\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"columns\",\n      direction: \"horizontal\",\n      type: \"column\",\n      children: provided => /*#__PURE__*/_jsxDEV(Columns, { ...provided.droppableProps,\n        ref: provided.innerRef,\n        children: [state.columnOrder.map((id, i) => {\n          const col = state.columns[id];\n          const tasks = col.taskIds.map(taskid => state.tasks[taskid]);\n          return /*#__PURE__*/_jsxDEV(Column, {\n            column: col,\n            tasks: tasks,\n            index: i\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 22\n          }, this);\n        }), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDoListPage, \"BL8KEmW8yo9hBsp041bZ0gjE0Ks=\");\n\n_c = ToDoListPage;\nexport default ToDoListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoListPage\");","map":{"version":3,"names":["useState","useEffect","memo","ReactDOM","styled","DragDropContext","Droppable","Draggable","Api","Card","ToDoListPage","list","setList","token","undefined","local","localStorage","getItem","session","sessionStorage","window","location","href","setItem","config","headers","Authorization","getArticle","get","then","data","console","log","tasks","task1","id","title","content","task2","task3","task4","columns","col1","taskIds","col2","col3","columnOrder","TaskContainer","div","props","isDragging","Task","task","index","provided","snapshot","draggableProps","dragHandleProps","innerRef","description","category","Container","Title","h3","List","isDraggingOver","Columns","Column","column","droppableProps","map","t","i","placeholder","state","setState","destination","source","draggableId","type","droppableId","newColOrd","Array","from","splice","newState","startcol","endcol","newCol","startTaskIds","newStart","endTaskIds","newEnd","col","taskid"],"sources":["/Users/mateusdavila/Desktop/code/intercambio/front/src/components/toDoList/ToDoListPage.js"],"sourcesContent":["import {useState, useEffect , memo} from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport Api from \"../../axios/Axios\";\nimport Card from \"./Card\";\n\n\n\n\nfunction ToDoListPage() {\n    const [list,setList] = useState([])\n    let token = undefined\n\n    const local = localStorage.getItem('token');\n    const session = sessionStorage.getItem('token');\n\n  \n    if(!session){\n        if(!local){\n            window.location.href = '/login'\n        } else{\n            token =local\n            sessionStorage.setItem('token',local)\n        }\n    } else{\n      token = session\n  \n  \n  \n      \n    }\n    \n    \n\n    \n    useEffect(()=>{\n\n        if(token !== undefined){\n    \n  \n            const config = {\n                headers: { Authorization: `Bearer ${sessionStorage.getItem('token')}` }\n            };\n            async function getArticle(){\n              await Api.get(`/user/todolist`, config)\n                  .then((data)=>{\n                    setList([data.data])\n                  })\n                }\n                getArticle()\n            }\n            \n        },[token])  \n        \n        console.log(list)\n    \n\n\n\nuseEffect(()=>{\n    \n},[list])\n\n\nconst data = {\n    tasks: {\n      task1: {\n        id: \"task1\",\n        title:'aklsdflksad',\n        content: \"Take out the bins\"\n      },\n      task2: {\n        id: \"task2\",\n        title:'aklsdflksad',\n\n        content: \"Watch TV\"\n      },\n      task3: {\n        id: \"task3\",\n        title:'aklsdflksad',\n\n        content: \"Charge phone\"\n      },\n      task4: {\n        id: \"task4\",\n        title:'aklsdflksad',\n\n        content: \"Cook dinner\"\n      }\n    },\n    columns: {\n      col1: {\n        id: \"col1\",\n        title: \"Aberto\",\n        taskIds: [\"task1\", \"task2\", \"task3\", \"task4\"]\n      },\n      col2: {\n        id: \"col2\",\n        title: \"Em Progresso\",\n        taskIds: []\n      },\n      col3: {\n        id: \"col3\",\n        title: \"Finalizado\",\n        taskIds: []\n      }\n    },\n    columnOrder: [\"col1\", \"col2\", \"col3\"]\n  };\n  \n  const TaskContainer = styled.div`\n    border: 1px solid lightgrey;\n    padding: 8px;\n    border-radius: 2px;\n    margin-bottom: 8px;\n    background-color: ${props => (props.isDragging ? \"red\" : \"white\")};\n    transition: background 0.1s;\n  `;\n  \n  \n  \n  \n  const Task = memo(({ task, index }) => {\n    return (\n      <Draggable draggableId={task.id} index={index}>\n        {(provided, snapshot) => (\n            \n            \n            <TaskContainer\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            isDragging={snapshot.isDragging}\n            >\n              <Card title={task.title} description={task.description} category={task.category}>\n  \n\n          </Card>\n          </TaskContainer>\n        )}\n      </Draggable>\n    );\n  });\n  \n  const Container = styled.div`\n    margin: 8px;\n    border: 1px solid lightgrey;\n    border-radius: 2px;\n    width: 200px;\n    display: flex;\n    flex-direction: column;\n    background-color: ${props => (props.isDragging ? \"lightgreen\" : \"white\")};\n  `;\n  const Title = styled.h3`\n    padding: 8px;\n  `;\n  const List = styled.div`\n    padding: 8px;\n    transition: background 0.1s;\n    background-color: ${props =>\n      props.isDraggingOver ? \"lightgrey\" : \"inherit \"};\n    flex-grow: 1;\n  `;\n  \n  const Columns = styled.div`\n    display: flex;\n  `;\n  \n  \n  \n  const Column = memo(({ column, tasks, index }) => (\n    <Draggable draggableId={column.id} index={index}>\n      {(provided, snapshot) => (\n        <Container\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          isDragging={snapshot.isDragging}\n          ref={provided.innerRef}\n        >\n          <Title {...provided.dragHandleProps}>{column.title}</Title>\n          <Droppable droppableId={column.id} type=\"task\">\n            {(provided, snapshot) => (\n              <List\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                isDraggingOver={snapshot.isDraggingOver}\n              >\n                {tasks.map((t, i) => (\n                  <Task key={t.id} task={t} index={i} />\n                ))}\n                {provided.placeholder}\n              </List>\n            )}\n          </Droppable>\n        </Container>\n      )}\n    </Draggable>\n  ));\n\n  const [state, setState] = useState(data);\n  return (\n    <DragDropContext\n      onDragEnd={({ destination, source, draggableId, type }) => {\n        if (!destination) {\n          return;\n        }\n        if (\n          destination.droppableId === source.droppableId &&\n          destination.index === source.index\n        ) {\n          return;\n        }\n\n        if (type === \"column\") {\n          const newColOrd = Array.from(state.columnOrder);\n          newColOrd.splice(source.index, 1);\n          newColOrd.splice(destination.index, 0, draggableId);\n\n          const newState = {\n            ...state,\n            columnOrder: newColOrd\n          };\n          setState(newState);\n        }\n\n        const startcol = state.columns[source.droppableId];\n        const endcol = state.columns[destination.droppableId];\n\n        if (startcol === endcol) {\n          const tasks = Array.from(startcol.taskIds);\n          tasks.splice(source.index, 1);\n          tasks.splice(destination.index, 0, draggableId);\n\n          const newCol = {\n            ...startcol,\n            taskIds: tasks\n          };\n\n          const newState = {\n            ...state,\n            columns: {\n              ...state.columns,\n              [newCol.id]: newCol\n            }\n          };\n\n          setState(newState);\n          return;\n        }\n        const startTaskIds = Array.from(startcol.taskIds);\n        startTaskIds.splice(source.index, 1);\n        const newStart = {\n          ...startcol,\n          taskIds: startTaskIds\n        };\n        const endTaskIds = Array.from(endcol.taskIds);\n        endTaskIds.splice(destination.index, 0, draggableId);\n        const newEnd = {\n          ...endcol,\n          taskIds: endTaskIds\n        };\n        const newState = {\n          ...state,\n          columns: {\n            ...state.columns,\n            [newStart.id]: newStart,\n            [newEnd.id]: newEnd\n          }\n        };\n        setState(newState);\n      }}\n    >\n      <Droppable droppableId=\"columns\" direction=\"horizontal\" type=\"column\">\n        {provided => (\n          <Columns {...provided.droppableProps} ref={provided.innerRef}>\n            {state.columnOrder.map((id, i) => {\n              const col = state.columns[id];\n              const tasks = col.taskIds.map(taskid => state.tasks[taskid]);\n              return <Column key={id} column={col} tasks={tasks} index={i} />;\n            })}\n            {provided.placeholder}\n          </Columns>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n}\n\nexport default ToDoListPage\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}